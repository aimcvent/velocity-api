plugins {
    id 'java'
    id 'maven-publish'
}

group = 'fr.aimcvent'
version = '1.0-SNAPSHOT'

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'fr.aimcvent'
            artifactId = 'aimcvent-api'
            version = "1.0-SNAPSHOT"
            from components.java

            pom {
                description = 'A description of my library'
            }
        }
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
}

dependencies {
    compileOnly "com.velocitypowered:velocity-api:3.2.0-SNAPSHOT"
    annotationProcessor "com.velocitypowered:velocity-api:3.2.0-SNAPSHOT"
    implementation 'com.github.aimcvent:kernel-api:1.0.2'

    // implementation project(':kernel-api');
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

jar {
    configurations.implementation.setCanBeResolved(true)
    configurations.implementation.resolutionStrategy {
        duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    }
    exclude('META-INF/LICENSE', 'META-INF/NOTICE')
    doFirst {
        from { (configurations.implementation.findAll { !it.path.endsWith(".pom") })
                .collect { it.isDirectory() ? it : zipTree(it) } }
    }
}